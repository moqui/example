<?xml version="1.0" encoding="UTF-8"?>
<!--
This software is in the public domain under CC0 1.0 Universal plus a 
Grant of Patent License.

To the extent possible under law, the author(s) have dedicated all
copyright and related and neighboring rights to this software to the
public domain worldwide. This software is distributed without any
warranty.

You should have received a copy of the CC0 Public Domain Dedication
along with this software (see the LICENSE.md file). If not, see
<http://creativecommons.org/publicdomain/zero/1.0/>.
-->
<screen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:noNamespaceSchemaLocation="http://moqui.org/xsd/xml-screen-3.xsd"
        include-child-content="true" require-authentication="false" menu-image="fa fa-flash" menu-image-type="icon">

    <!-- To test this try something like:
    NOTE: "am9obi5kb2U6bW9xdWk=" is the Base64 encoded String "john.doe:moqui"
    curl -X GET -H "Authorization: Basic am9obi5kb2U6bW9xdWk=" http://localhost:8080/apps/example/ExampleEntity/TEST2
    curl -X GET -u john.doe:moqui http://localhost:8080/apps/example/ExampleEntity/TEST2
    curl -X GET -H "Authorization: Basic am9obi5kb2U6bW9xdWk=" http://localhost:8080/apps/example/ExampleEntity?exampleId=TEST2
    -->
    <transition name="ExampleEntity" method="get" read-only="true">
        <path-parameter name="exampleId"/>
        <actions>
            <entity-find-one entity-name="moqui.example.Example" value-field="example"/>
            <script>ec.web.sendJsonResponse(example)</script>
        </actions>
        <default-response type="none"/>
    </transition>
    <!-- To test this try something like:

    curl -X POST -H "Content-Type: application/json" \
         -d '{ "exampleName":"REST Test 1", "exampleTypeEnumId":"EXT_MADE_UP", "statusId":"EXST_IN_DESIGN",
             "authUsername":"john.doe", "authPassword":"moqui" }' \
         http://localhost:8080/apps/example/ExampleEntity
    -->
    <transition name="ExampleEntity" method="post">
        <service-call name="moqui.example.ExampleServices.createExample" in-map="ec.web.parameters"
                      web-send-json-response="true"/>
        <default-response type="none"/>
    </transition>
    <!-- To test this try something like:

    curl -X PUT -H "Content-Type: application/json" \
         -d '{ "exampleId":"100010", "exampleName":"REST Test 1 - Rev 2", \
             "authUsername":"john.doe", "authPassword":"moqui" }' \
         http://localhost:8080/apps/example/ExampleEntity

    OR (a much better approach):

    curl -X PUT -H "Content-Type: application/json" -H "Authorization: Basic am9obi5kb2U6bW9xdWk=" \
         -d '{ "exampleName":"REST Test - Rev 2" }' http://localhost:8080/apps/example/ExampleEntity/100010
    -->
    <transition name="ExampleEntity" method="put">
        <path-parameter name="exampleId"/>
        <service-call name="moqui.example.ExampleServices.updateExample" in-map="ec.web.parameters"
                      web-send-json-response="true"/>
        <default-response type="none"/>
    </transition>
    <!-- To test this try something like:
    curl -X DELETE -H "Authorization: Basic am9obi5kb2U6bW9xdWk=" http://localhost:8080/apps/example/ExampleEntity/100010
    -->
    <transition name="ExampleEntity" method="delete">
        <path-parameter name="exampleId"/>
        <service-call name="delete#moqui.example.Example" in-map="ec.web.parameters"
                      web-send-json-response="true"/>
        <default-response type="none"/>
    </transition>

    <transition name="LoadAllData">
        <!-- NOTE: this is in the example component because it should NEVER be deployed on a production server! -->
        <actions>
            <script><![CDATA[
            import org.moqui.entity.EntityDataLoader
            import org.moqui.context.ExecutionContext
            import org.moqui.impl.context.ArtifactExecutionInfoImpl
            ExecutionContext ec = context.ec

            ec.artifactExecution.disableAuthz()
            ArtifactExecutionInfoImpl aei = new ArtifactExecutionInfoImpl("loadData", "AT_OTHER", "AUTHZA_ALL")
            ec.getArtifactExecution().push(aei, false)
            ec.getArtifactExecution().setAnonymousAuthorizedAll()
            boolean loggedInAnonymous = ec.getUser().loginAnonymousIfNoUser()

            // TODO: reject requests until this is done?
            // at least make sure there are no Enumeration records
            if (ec.getEntity().find("moqui.basic.Enumeration").useCache(false).count()) {
                String errMsg = "Not loading data, found Enumeration records so database isn't empty"
                ec.logger.info(errMsg)
                ec.message.addMessage(errMsg)
                return
            }

            // load all the data
            EntityDataLoader edl = ec.getEntity().makeDataLoader()

            startTime = System.currentTimeMillis()
            records = edl.load()
            totalSeconds = (System.currentTimeMillis() - startTime) / 1000

            ec.artifactExecution.pop(aei)
            if (loggedInAnonymous) ec.getUser().logoutAnonymousOnly()
            ec.artifactExecution.enableAuthz()

            ec.cache.clearAllCaches()
            ]]></script>
            <log level="info" message="Loaded [${records}] records in ${totalSeconds} seconds."/>
        </actions>
        <default-response url="."/>
    </transition>

    <!-- To test this try something like:

    curl -X POST -H "Content-Type: application/json" \
         -d '{ "testInput":"foo bar", "authUsername":"john.doe", "authPassword":"moqui" }' \
         http://localhost:8080/apps/example/localCamelExample
    -->
    <transition name="localCamelExample">
        <service-call name="moqui.example.ExampleServices.localCamelExample" web-send-json-response="true"/>
        <default-response type="none"/>
    </transition>

    <subscreens default-item="Example">
        <!-- these are actually links to content to add to the menu since content is not automatically added to the menu -->
        <subscreens-item name="ExamplePolicies" menu-index="4" menu-title="Policies"/>
        <subscreens-item name="ExampleTerms" menu-index="5" menu-title="Terms"/>
        <subscreens-item name="ExampleWiki" menu-index="6" menu-title="Wiki"/>
        <subscreens-item name="ExampleMarkdown" menu-index="7" menu-title="Markdown"/>
    </subscreens>

    <widgets>
        <subscreens-panel id="example-app" type="popup"/>
    </widgets>
</screen>
